# Generated by Django 3.0.5 on 2020-04-18 19:04

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('max_student_number', models.PositiveSmallIntegerField(default=20)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date group was created')),
            ],
        ),
        migrations.CreateModel(
            name='HealthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('active', models.BooleanField(default=True, verbose_name="Is trainer's account active?")),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date account was created')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('active', models.BooleanField(default=True, verbose_name="Is student's account active?")),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date account was created')),
                ('health_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classes.HealthGroup', verbose_name='Health group of a student')),
            ],
        ),
        migrations.CreateModel(
            name='SportClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Date and time of the sport class')),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=5400), verbose_name='Duration of the class')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classes.Group')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='students',
            field=models.ManyToManyField(to='classes.Student', verbose_name='Students enrolled in the group'),
        ),
        migrations.AddField(
            model_name='group',
            name='trainers',
            field=models.ManyToManyField(to='classes.Trainer', verbose_name='Trainers of the group'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presence', models.BooleanField(default=False, verbose_name='Was the student present in the class?')),
                ('sport_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classes.SportClass')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classes.Student')),
            ],
        ),
    ]
